1.看yum仓库    能访问百度  


2.配置yum仓库
[root@localhost ~]#
[root@localhost ~]# cd /etc/yum.repos.d/
[root@localhost yum.repos.d]# ls
CentOS-Base.repo  CentOS-Debuginfo.repo  CentOS-Media.repo    CentOS-Vault.repo
CentOS-CR.repo    CentOS-fasttrack.repo  CentOS-Sources.repo
[root@localhost yum.repos.d]# yum clean all; yum makecache
Loaded plugins: fastestmirror
Cleaning repos: base extras updates
Cleaning up everything
Maybe you want: rm -rf /var/cache/yum, to also free up space taken by orphaned data from disabled or removed repos
Loaded plugins: fastestmirror
Determining fastest mirrors
 * base: mirrors.huaweicloud.com
 * extras: mirrors.bfsu.edu.cn
 * updates: mirrors.bfsu.edu.cn
base                                                                                             | 3.6 kB  00:00:00
extras                                                                                           | 2.9 kB  00:00:00
updates                                                                                          | 2.9 kB  00:00:00
(1/10): base/7/x86_64/group_gz                                                                   | 153 kB  00:00:00
(2/10): extras/7/x86_64/filelists_db                                                             | 303 kB  00:00:00
(3/10): extras/7/x86_64/primary_db                                                               | 250 kB  00:00:00
(4/10): extras/7/x86_64/other_db                                                                 | 150 kB  00:00:00
(5/10): base/7/x86_64/filelists_db                                                               | 7.2 MB  00:00:03
(6/10): updates/7/x86_64/filelists_db                                                            |  13 MB  00:00:03
(7/10): updates/7/x86_64/primary_db                                                              |  24 MB  00:00:04
(8/10): updates/7/x86_64/other_db                                                                | 1.5 MB  00:00:01
(9/10): base/7/x86_64/other_db                                                                   | 2.6 MB  00:00:05
(10/10): base/7/x86_64/primary_db                                                                | 6.1 MB  00:00:05
Metadata Cache Created
[root@localhost yum.repos.d]#
关闭防火墙 
[root@localhost yum.repos.d]# systemctl stop firewalld ; systemctl disable firewalld
Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
[root@localhost yum.repos.d]#

关闭selinux
[root@localhost yum.repos.d]# vi /etc/selinux/config
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=disabled   关闭
# SELINUXTYPE= can take one of three two values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected.
#     mls - Multi Level Security protection.
SELINUXTYPE=targeted
[root@localhost yum.repos.d]#
[root@localhost yum.repos.d]# setenforce  0 
[root@localhost yum.repos.d]#
[root@localhost yum.repos.d]# getenforce
Permissive
[root@localhost yum.repos.d]# reboot

安装lamp架构  
L   linux   apache    mysql php    java    sprintboot  

yum install -y httpd;yum install -y mariadb mariadb-server  ; yum install php php-mysql 

systemctl start mariadb ;systemctl enable mariadb ; systemctl start  httpd ; systemctl enable httpd 

windows上生成
$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/SuperMan/.ssh/id_rsa):
/c/Users/SuperMan/.ssh/id_rsa already exists.
Overwrite (y/n)? n

SuperMan@DotZero MINGW64 ~/Desktop
$ cd

SuperMan@DotZero MINGW64 ~
$ cd .ssh

SuperMan@DotZero MINGW64 ~/.ssh
$ ls -al
total 26
drwxr-xr-x 1 SuperMan 197610    0 Nov 27 19:38 ./
drwxr-xr-x 1 SuperMan 197610    0 Nov 22 20:04 ../
-rw-r--r-- 1 SuperMan 197610  291 Nov 27 19:51 config
-rw-r--r-- 1 SuperMan 197610 2602 Feb 26  2022 id_rsa
-rw-r--r-- 1 SuperMan 197610  571 Feb 26  2022 id_rsa.pub
-rw-r--r-- 1 SuperMan 197610 3693 Nov 27 19:38 known_hosts
-rw-r--r-- 1 SuperMan 197610 3119 Nov 27 19:38 known_hosts.old

SuperMan@DotZero MINGW64 ~/.ssh
$



SuperMan@DotZero MINGW64 ~/Desktop
$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/SuperMan/.ssh/id_rsa):
/c/Users/SuperMan/.ssh/id_rsa already exists.
Overwrite (y/n)? n

SuperMan@DotZero MINGW64 ~/Desktop
$ cd

SuperMan@DotZero MINGW64 ~
$ cd .ssh

SuperMan@DotZero MINGW64 ~/.ssh
$ ls -al
total 26
drwxr-xr-x 1 SuperMan 197610    0 Nov 27 19:38 ./
drwxr-xr-x 1 SuperMan 197610    0 Nov 22 20:04 ../
-rw-r--r-- 1 SuperMan 197610  291 Nov 27 19:51 config
-rw-r--r-- 1 SuperMan 197610 2602 Feb 26  2022 id_rsa
-rw-r--r-- 1 SuperMan 197610  571 Feb 26  2022 id_rsa.pub
-rw-r--r-- 1 SuperMan 197610 3693 Nov 27 19:38 known_hosts
-rw-r--r-- 1 SuperMan 197610 3119 Nov 27 19:38 known_hosts.old

SuperMan@DotZero MINGW64 ~/.ssh
$

SuperMan@DotZero MINGW64 ~/.ssh
$ ssh-copy-id root@192.168.56.109
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/c/Users/SuperMan/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
root@192.168.56.109's password:

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'root@192.168.56.109'"
and check to make sure that only the key(s) you wanted were added.


SuperMan@DotZero MINGW64 ~/.ssh
$ ssh root@192.168.56.109
Last login: Mon Nov 27 06:56:07 2023 from 192.168.56.1
[root@localhost ~]#
[root@localhost ~]#




linux生成的
[root@localhost ~]# ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa):
Created directory '/root/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:gQ7Z4pc4QkfcOsh/NnRpbv+buxnqDJk9BojHM2SIsSk root@localhost.localdomain
The key's randomart image is:
+---[RSA 2048]----+
|  ....           |
|   *.+..         |
|E.=.*.= ..       |
| ooooX.o+.       |
|  ..=oX+S        |
|   ..++oo=       |
|     o o+.+ .    |
|         +.o +   |
|         .+.B+   |
+----[SHA256]-----+

最后进行验证的操作
